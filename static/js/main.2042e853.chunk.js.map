{"version":3,"sources":["reportWebVitals.js","app/utils/validator.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/services/localStorage.service.js","app/services/user.service.js","app/hooks/useAuth.jsx","app/services/http.service.js","app/services/quality.service.js","app/hooks/useQualities.jsx","app/services/profession.service.js","app/hooks/useProfession.jsx","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/hooks/useUsers.jsx","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/services/comment.service.js","app/hooks/useComments.jsx","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/utils/mockData.js","app/layouts/main.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/components/common/protectedRoute.jsx","app/layouts/logOut.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","values","disabled","map","option","RadioField","handleChange","checked","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","history","useHistory","goBack","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","setTokens","refreshToken","idToken","localId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","localStorageService","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","userEndpoint","userService","get","a","httpService","create","payload","put","_id","getCurrentUser","update","formData","httpAuth","axios","baseURL","params","key","process","REACT_APP_FIREBASE_KEY","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","currentUser","setUser","setError","isLoading","setLoading","email","password","post","returnSecureToken","getUserData","errorCatcher","response","code","console","log","Error","randomInt","min","max","Math","floor","random","rest","createUser","rate","completedMeetings","image","toString","substring","content","useEffect","toast","Provider","signUp","logIn","logOut","push","editUser","http","configFile","apiEndpoint","interceptors","request","use","isFireBase","containSlash","url","slice","now","grant_type","refresh_token","id_token","expires_id","user_id","accessToken","auth","Promise","reject","res","keys","status","delete","qualityService","fetchAll","QualitiesContext","useQualities","QualitiesProvider","qualities","setQualities","getQualities","getQuality","find","q","professionService","ProfessionContext","useProfessions","ProfessionProvider","professions","setProfessions","ProfessionService","getProfessionsList","getProfession","p","EditUserPage","userId","useParams","setIsLoading","setErrors","profession","sex","setData","isLoadingQalities","qualitiesList","isLoadingProfessions","professionsList","getProfessionById","prof","elements","qualitiesArray","elem","quality","handleSubmit","e","preventDefault","transformData","qualitiesData","forEach","item","qualiti","qualitiesDataOb","validatorConfig","isRequired","isEmail","isValid","onSubmit","UserCard","user","location","pathname","src","width","role","Quality","color","Qualities","isEmptyQualities","_","isEmpty","qual","QualitiesCard","MeetingsCard","displayDate","date","parseInt","dateNow","getFullYear","getDate","getHours","minutesDif","getMinutes","toLocaleString","month","day","getMonth","UserContext","useUser","UserProvider","users","setUsers","getUsers","getUserById","u","Comment","created","created_at","onRemove","alt","height","CommentsList","comments","comment","TextAreaField","AddCommentForm","commentEndpoint","commentService","createComment","getComments","pageId","orderBy","equalTo","removeComment","commentId","CommentsContext","CommentsProvider","setComments","nanoid","filter","c","Comments","sortedComments","UserPage","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","SearchStatus","number","lastOne","Number","indexOf","renderPhrase","BookMark","TableBody","columns","renderContent","column","component","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","Profession","UserTable","onToggleBookMark","to","bookmark","UsersListPage","professionsLoading","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","JSON","stringify","count","usersCrop","pageNumber","startIndex","splice","paginate","placeholder","onDelete","newArray","pageIndex","Users","edit","CheckBoxField","LoginForm","stayOn","enterError","setEnterError","state","from","RegisterForm","licence","isCapitalSymbol","isContainDigit","newData","Login","formType","setFormType","toggleFormType","useMockData","statusConsts","setStatus","progress","setProgress","setCount","summaryCount","incrementCount","newProgress","updateProgress","initialize","Main","NavProfile","isOpen","setOpen","NavBar","aria-current","ProtectedRoute","Component","render","props","LogOut","App","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2042e853.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}>{label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback\">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name} className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id={name}\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray.length > 0 &&\n                    optionsArray.map((option) => (\n                        <option value={option.value} key={option.value}>\n                            {option.label}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\n\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.values(options)\n            : options;\n\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                closeMenuOnSelect={false}\n                defaultValue={defaultValue}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nconst BackHistoryButton = () => {\n    const history = useHistory();\n    return (\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\n            <i className=\"bi bi-caret-left\"></i>\n            Назад\n        </button>\n    );\n};\n\nexport default BackHistoryButton;\n","const TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nconst USERID_KEY = \"user-local-id\";\n\nexport function setTokens({\n    refreshToken,\n    idToken,\n    localId,\n    expiresIn = 3600\n}) {\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\n    localStorage.setItem(USERID_KEY, localId);\n    localStorage.setItem(TOKEN_KEY, idToken);\n    localStorage.setItem(REFRESH_KEY, refreshToken);\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\n}\nexport function getAccessToken() {\n    return localStorage.getItem(TOKEN_KEY);\n}\nexport function getRefreshToken() {\n    return localStorage.getItem(REFRESH_KEY);\n}\nexport function removeAuthData() {\n    localStorage.removeItem(USERID_KEY);\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(REFRESH_KEY);\n    localStorage.removeItem(EXPIRES_KEY);\n}\n\nexport function getTokenExpiresDate() {\n    return localStorage.getItem(EXPIRES_KEY);\n}\nexport function getUserId() {\n    return localStorage.getItem(USERID_KEY);\n}\n\nconst localStorageService = {\n    setTokens,\n    getAccessToken,\n    getRefreshToken,\n    getTokenExpiresDate,\n    getUserId,\n    removeAuthData\n};\nexport default localStorageService;\n","import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\n\nconst userEndpoint = \"user/\";\n\nconst userService = {\n    get: async () => {\n        const { data } = await httpService.get(userEndpoint);\n        return data;\n    },\n    create: async (payload) => {\n        const { data } = await httpService.put(\n            userEndpoint + payload._id,\n            payload\n        );\n        return data;\n    },\n    getCurrentUser: async () => {\n        const { data } = await httpService.get(\n            userEndpoint + localStorageService.getUserId()\n        );\n        return data;\n    },\n    update: async (id, formData) => {\n        const { data } = await httpService.put(userEndpoint + id, formData);\n        return data;\n    }\n};\nexport default userService;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport axios from \"axios\";\nimport userService from \"../services/user.service\";\nimport localStorageService, {\n    setTokens\n} from \"../services/localStorage.service\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const httpAuth = axios.create({\n    baseURL: \"https://identitytoolkit.googleapis.com/v1/\",\n    params: {\n        key: process.env.REACT_APP_FIREBASE_KEY\n    }\n});\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n\nconst AuthProvider = ({ children }) => {\n    const [currentUser, setUser] = useState();\n    const [error, setError] = useState(null);\n    const [isLoading, setLoading] = useState(true);\n    const history = useHistory();\n\n    async function logIn({ email, password }) {\n        try {\n            const { data } = await httpAuth.post(\n                `accounts:signInWithPassword`,\n                {\n                    email,\n                    password,\n                    returnSecureToken: true\n                }\n            );\n            setTokens(data);\n            await getUserData();\n        } catch (error) {\n            errorCatcher(error);\n            const { code, message } = error.response.data.error;\n            console.log(code, message);\n            if (code === 400) {\n                switch (message) {\n                    case \"INVALID_PASSWORD\":\n                        throw new Error(\"Email или пароль введены некорректно\");\n\n                    default:\n                        throw new Error(\n                            \"Слишком много попыток входа. Попробуйте позже\"\n                        );\n                }\n            }\n        }\n    }\n    function logOut() {\n        localStorageService.removeAuthData();\n        setUser(null);\n        history.push(\"/\");\n    }\n    function randomInt(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n    async function signUp({ email, password, ...rest }) {\n        try {\n            const { data } = await httpAuth.post(`accounts:signUp`, {\n                email,\n                password,\n                returnSecureToken: true\n            });\n            setTokens(data);\n            await createUser({\n                _id: data.localId,\n                email,\n                rate: randomInt(1, 5),\n                completedMeetings: randomInt(0, 200),\n                image: `https://avatars.dicebear.com/api/avataaars/${(\n                    Math.random() + 1\n                )\n                    .toString(36)\n                    .substring(7)}.svg`,\n                ...rest\n            });\n        } catch (error) {\n            errorCatcher(error);\n            const { code, message } = error.response.data.error;\n            console.log(code, message);\n            if (code === 400) {\n                if (message === \"EMAIL_EXISTS\") {\n                    const errorObject = {\n                        email: \"Пользователь с таким Email уже существует\"\n                    };\n                    throw errorObject;\n                }\n            }\n        }\n    }\n    async function createUser(data) {\n        try {\n            const { content } = await userService.create(data);\n\n            setUser(content);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n    async function editUser(id, data) {\n        try {\n            const { content } = await userService.update(data._id, data);\n            setUser(content);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    async function getUserData() {\n        try {\n            const { content } = await userService.getCurrentUser();\n            setUser(content);\n        } catch (error) {\n            errorCatcher(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n    useEffect(() => {\n        if (localStorageService.getAccessToken()) {\n            getUserData();\n        } else {\n            setLoading(false);\n        }\n    }, []);\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n    return (\n        <AuthContext.Provider\n            value={{ signUp, logIn, currentUser, logOut, editUser }}\n        >\n            {!isLoading ? children : \"Loading...\"}\n        </AuthContext.Provider>\n    );\n};\n\nAuthProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default AuthProvider;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport configFile from \"../config.json\";\nimport { httpAuth } from \"../hooks/useAuth\";\nimport localStorageService from \"./localStorage.service\";\n\nconst http = axios.create({\n    baseURL: configFile.apiEndpoint\n});\n\nhttp.interceptors.request.use(\n    async function (config) {\n        if (configFile.isFireBase) {\n            const containSlash = /\\/$/gi.test(config.url);\n            config.url =\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\n            const expiresDate = localStorageService.getTokenExpiresDate();\n            const refreshToken = localStorageService.getRefreshToken();\n            if (refreshToken && expiresDate < Date.now()) {\n                const { data } = await httpAuth.post(\"token\", {\n                    grant_type: \"refresh_token\",\n                    refresh_token: refreshToken\n                });\n\n                localStorageService.setTokens({\n                    refreshToken: data.refresh_token,\n                    idToken: data.id_token,\n                    expiresIn: data.expires_id,\n                    localId: data.user_id\n                });\n            }\n            const accessToken = localStorageService.getAccessToken();\n            if (accessToken) {\n                config.params = { ...config.params, auth: accessToken };\n            }\n        }\n        return config;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\nfunction transformData(data) {\n    return data && !data._id\n        ? Object.keys(data).map((key) => ({\n              ...data[key]\n          }))\n        : data;\n}\nhttp.interceptors.response.use(\n    (res) => {\n        if (configFile.isFireBase) {\n            res.data = { content: transformData(res.data) };\n        }\n        return res;\n    },\n    function (error) {\n        const expectedErrors =\n            error.response &&\n            error.response.status >= 400 &&\n            error.response.status < 500;\n\n        if (!expectedErrors) {\n            console.log(error);\n            toast.error(\"Something was wrong. Try it later\");\n        }\n        return Promise.reject(error);\n    }\n);\nconst httpService = {\n    get: http.get,\n    post: http.post,\n    put: http.put,\n    delete: http.delete\n};\nexport default httpService;\n","import httpService from \"./http.service\";\nconst qualityEndpoint = \"quality/\";\n\nconst qualityService = {\n    fetchAll: async () => {\n        const { data } = await httpService.get(qualityEndpoint);\n        return data;\n    }\n};\nexport default qualityService;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\nimport qualityService from \"../services/quality.service\";\n\nconst QualitiesContext = React.createContext();\n\nexport const useQualities = () => {\n    return useContext(QualitiesContext);\n};\n\nexport const QualitiesProvider = ({ children }) => {\n    const [qualities, setQualities] = useState([]);\n    const [error, setError] = useState(null);\n    const [isLoading, setLoading] = useState(true);\n\n    useEffect(() => {\n        const getQualities = async () => {\n            try {\n                const { content } = await qualityService.fetchAll();\n                setQualities(content);\n                setLoading(false);\n            } catch (error) {\n                errorCatcher(error);\n            }\n        };\n        getQualities();\n    }, []);\n    const getQuality = (id) => {\n        return qualities.find((q) => q._id === id);\n    };\n\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n\n    return (\n        <QualitiesContext.Provider\n            value={{\n                qualities,\n                getQuality,\n                isLoading\n            }}\n        >\n            {children}\n        </QualitiesContext.Provider>\n    );\n};\n\nQualitiesProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import httpService from \"./http.service\";\n\nconst professionEndpoint = \"profession/\";\n\nconst professionService = {\n    get: async () => {\n        const { data } = await httpService.get(professionEndpoint);\n        return data;\n    }\n};\nexport default professionService;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProfessionService from \"../services/profession.service\";\nimport { toast } from \"react-toastify\";\n\nconst ProfessionContext = React.createContext();\n\nexport const useProfessions = () => {\n    return useContext(ProfessionContext);\n};\n\nexport const ProfessionProvider = ({ children }) => {\n    const [isLoading, setLoading] = useState(true);\n    const [professions, setProfessions] = useState([]);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n\n    useEffect(() => {\n        getProfessionsList();\n    }, []);\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    function getProfession(id) {\n        return professions.find((p) => p._id === id);\n    }\n\n    async function getProfessionsList() {\n        try {\n            const { content } = await ProfessionService.get();\n            setProfessions(content);\n            setLoading(false);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n\n    return (\n        <ProfessionContext.Provider\n            value={{ isLoading, professions, getProfession }}\n        >\n            {children}\n        </ProfessionContext.Provider>\n    );\n};\n\nProfessionProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { validator } from \"../../../utils/validator\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radioField\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { useQualities } from \"../../../hooks/useQualities\";\nimport { useProfessions } from \"../../../hooks/useProfession\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nimport { toast } from \"react-toastify\";\n\nconst EditUserPage = () => {\n    const { userId } = useParams();\n    const history = useHistory();\n    const [isLoading, setIsLoading] = useState(false);\n    const [errors, setErrors] = useState({});\n\n    const [data, setData] = useState({\n        name: \"\",\n        email: \"\",\n        profession: \"\",\n        sex: \"male\",\n        qualities: []\n    });\n\n    const { currentUser, editUser } = useAuth();\n    const { isLoading: isLoadingQalities, qualities } = useQualities();\n    let qualitiesList = {};\n    if (!isLoadingQalities) {\n        qualitiesList = qualities.map((q) => ({\n            label: q.name,\n            value: q._id\n        }));\n    }\n\n    const { isLoading: isLoadingProfessions, professions } = useProfessions();\n    const professionsList = professions.map((p) => ({\n        label: p.name,\n        value: p._id\n    }));\n    const getProfessionById = (id) => {\n        for (const prof of professions) {\n            if (prof._id === id) {\n                return prof._id;\n            }\n        }\n    };\n    const getQualities = (elements) => {\n        const qualitiesArray = [];\n        for (const elem of elements) {\n            for (const quality in qualities) {\n                if (elem.value === qualities[quality]._id) {\n                    qualitiesArray.push(qualities[quality]._id);\n                }\n            }\n        }\n        return qualitiesArray;\n    };\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const { profession, qualities } = data;\n\n        try {\n            await editUser(data._id, {\n                ...data,\n                profession: getProfessionById(profession),\n                qualities: getQualities(qualities)\n            });\n            history.push(`/users/${userId}`);\n        } catch (error) {\n            setErrors(error);\n            toast.error(errors);\n        }\n    };\n    const transformData = (data) => {\n        if (data) {\n            const qualitiesData = [];\n            data.forEach((item) => {\n                const qualiti = qualities.find((q) => q._id === item);\n                const qualitiesDataOb = {};\n                qualitiesDataOb.label = qualiti.name;\n                qualitiesDataOb.value = item;\n                qualitiesData.push(qualitiesDataOb);\n            });\n            return qualitiesData;\n        }\n    };\n    useEffect(() => {\n        setIsLoading(true);\n        if (!isLoadingQalities && !isLoadingProfessions) {\n            setData((prevState) => ({\n                ...prevState,\n                ...currentUser,\n                _id: currentUser._id,\n                qualities: transformData(currentUser.qualities),\n                profession: currentUser.profession\n            }));\n        }\n    }, [qualities, professions]);\n    useEffect(() => {\n        if (\"_id\" in data) {\n            setIsLoading(false);\n        }\n    }, [data]);\n\n    useEffect(() => {\n        if (userId !== currentUser._id) {\n            history.push(`/users/${currentUser._id}`);\n        }\n    }, []);\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Введите ваше имя\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    return (\n        <div className=\"container mt-5\">\n            <BackHistoryButton />\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {!isLoading &&\n                    Object.keys(professions).length > 0 &&\n                    Object.keys(qualities).length > 0 ? (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Имя\"\n                                name=\"name\"\n                                value={data.name}\n                                onChange={handleChange}\n                                error={errors.name}\n                            />\n                            <TextField\n                                label=\"Электронная почта\"\n                                name=\"email\"\n                                value={data.email}\n                                onChange={handleChange}\n                                error={errors.email}\n                            />\n                            <SelectField\n                                label=\"Выбери свою профессию\"\n                                defaultOption=\"Choose...\"\n                                options={professionsList}\n                                name=\"profession\"\n                                onChange={handleChange}\n                                value={data.profession}\n                                error={errors.profession}\n                            />\n                            <RadioField\n                                options={[\n                                    { name: \"Male\", value: \"male\" },\n                                    { name: \"Female\", value: \"female\" },\n                                    { name: \"Other\", value: \"other\" }\n                                ]}\n                                value={data.sex}\n                                name=\"sex\"\n                                onChange={handleChange}\n                                label=\"Выберите ваш пол\"\n                            />\n\n                            <MultiSelectField\n                                defaultValue={data.qualities}\n                                options={qualitiesList}\n                                onChange={handleChange}\n                                name=\"qualities\"\n                                label=\"Выберите ваши качества\"\n                            />\n\n                            <button\n                                type=\"submit\"\n                                disabled={!isValid}\n                                className=\"btn btn-primary w-100 mx-auto\"\n                            >\n                                Обновить\n                            </button>\n                        </form>\n                    ) : (\n                        \"Loading...\"\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditUserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\nconst UserCard = ({ user }) => {\n    const history = useHistory();\n    const { currentUser } = useAuth();\n    const handleClick = () => {\n        history.push(history.location.pathname + \"/edit\");\n    };\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n                {currentUser._id === user._id && (\n                    <button\n                        className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\n                        onClick={handleClick}\n                    >\n                        <i className=\"bi bi-gear\"></i>\n                    </button>\n                )}\n\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                    <img\n                        src={user.image}\n                        className=\"rounded-circle\"\n                        width=\"150\"\n                    />\n                    <div className=\"mt-3\">\n                        <h4>{user.name}</h4>\n                        <p className=\"text-secondary mb-1\">\n                            {user.profession.name}\n                        </p>\n                        <div className=\"text-muted\">\n                            <i\n                                className=\"bi bi-caret-down-fill text-primary\"\n                                role=\"button\"\n                            ></i>\n                            <i\n                                className=\"bi bi-caret-up text-secondary\"\n                                role=\"button\"\n                            ></i>\n                            <span className=\"ms-2\">{user.rate}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nUserCard.propTypes = {\n    user: PropTypes.object\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useQualities } from \"../../../hooks/useQualities\";\nconst Quality = ({ id }) => {\n    const { getQuality } = useQualities();\n    const { color, name } = getQuality(id);\n    return (\n        <span className={\"badge m-1 bg-\" + color}>\n            {name}\n        </span>\n    );\n};\nQuality.propTypes = {\n    id: PropTypes.string.isRequired\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\nimport { useQualities } from \"../../../hooks/useQualities\";\nimport _ from \"lodash\";\nconst QualitiesList = ({ qualities }) => {\n    const { isLoading } = useQualities();\n    const isEmptyQualities = _.isEmpty(qualities);\n    if (isLoading) return \"Loading...\";\n\n    if (isEmptyQualities !== true) {\n        return (\n            <>\n                {qualities.map((qual) => (\n                    <Quality key={qual} id={qual} />\n                ))}\n            </>\n        );\n    } else return <span>Качества не выбраны</span>;\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\nimport Qualities from \"./qualities\";\nimport PropTypes from \"prop-types\";\n\nconst QualitiesCard = ({ data }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Qualities</span>\n                </h5>\n                <p className=\"card-text\">\n                    <Qualities qualities={data} />\n                </p>\n            </div>\n        </div>\n    );\n};\nQualitiesCard.propTypes = {\n    data: PropTypes.array\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst MeetingsCard = ({ value }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Completed meetings</span>\n                </h5>\n\n                <h1 className=\"display-1\">{value}</h1>\n            </div>\n        </div>\n    );\n};\nMeetingsCard.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default MeetingsCard;\n","export function displayDate(data) {\n    const date = new Date(parseInt(data));\n    const dateNow = new Date();\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\n    if (yearDif === 0) {\n        const dayDif = dateNow.getDate() - date.getDate();\n        if (dayDif === 0) {\n            const hourDif = dateNow.getHours() - date.getHours();\n            if (hourDif === 0) {\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\n\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\n                if (minutesDif >= 10 && minutesDif < 30) {\n                    return \"10 минут назад\";\n                }\n                return \"30 минут назад\";\n            }\n            return `${date.getHours()}:${date.getMinutes()}`;\n        }\n\n        return date.toLocaleString(\"default\", { month: \"long\", day: \"numeric\" });\n    }\n    return (\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\n    );\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\n\nconst UserContext = React.createContext();\n\nexport const useUser = () => {\n    return useContext(UserContext);\n};\n\nconst UserProvider = ({ children }) => {\n    const [users, setUsers] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        getUsers();\n    }, []);\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n    async function getUsers() {\n        try {\n            const { content } = await userService.get();\n            setUsers(content);\n            setLoading(false);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n        setLoading(false);\n    }\n    function getUserById(userId) {\n        return users.find((u) => u._id === userId);\n    }\n    return (\n        <UserContext.Provider value={{ users, getUserById }}>\n            {!isLoading ? children : \"Loading...\"}\n        </UserContext.Provider>\n    );\n};\n\nUserProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default UserProvider;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nconst Comment = ({\n    content,\n    created_at: created,\n    _id: id,\n    userId,\n    onRemove\n}) => {\n    const { getUserById } = useUser();\n    const { currentUser } = useAuth();\n    const user = getUserById(userId);\n\n    return (\n        <div className=\"bg-light card-body  mb-3\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"d-flex flex-start \">\n                        <img\n                            src={user.image}\n                            className=\"rounded-circle shadow-1-strong me-3\"\n                            alt=\"avatar\"\n                            width=\"65\"\n                            height=\"65\"\n                        />\n                        <div className=\"flex-grow-1 flex-shrink-1\">\n                            <div className=\"mb-4\">\n                                <div className=\"d-flex justify-content-between align-items-center\">\n                                    <p className=\"mb-1 \">\n                                        {user && user.name}{\" \"}\n                                        <span className=\"small\">\n                                            - {displayDate(created)}\n                                        </span>\n                                    </p>\n                                    {currentUser._id === userId && (\n                                        <button\n                                            className=\"btn btn-sm text-primary d-flex align-items-center\"\n                                            onClick={() => onRemove(id)}\n                                        >\n                                            <i className=\"bi bi-x-lg\"></i>\n                                        </button>\n                                    )}\n                                </div>\n                                <p className=\"small mb-0\">{content}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nComment.propTypes = {\n    content: PropTypes.string,\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string\n};\n\nexport default Comment;\n","import React from \"react\";\nimport Comment from \"./comment\";\nimport PropTypes from \"prop-types\";\n\nconst CommentsList = ({ comments, onRemove }) => {\n    return comments.map((comment) => (\n        <Comment key={comment._id} {...comment} onRemove={onRemove} />\n    ));\n};\nCommentsList.propTypes = {\n    comment: PropTypes.array,\n    onRemove: PropTypes.func\n};\n\nexport default CommentsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <textarea\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextAreaField.defaultProps = {\n    type: \"text\"\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useState } from \"react\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/validator\";\nimport PropTypes from \"prop-types\";\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState({});\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        content: {\n            isRequired: {\n                message: \"Сообщение не может быть пустым\"\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const clearForm = () => {\n        setData({});\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        clearForm();\n    };\n    return (\n        <div>\n            <h2>New comment</h2>\n            <form onSubmit={handleSubmit}>\n                <TextAreaField\n                    value={data.content || \"\"}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Опубликовать</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import CommentsList from \"./commentsList\";\nimport AddCommentForm from \"./addCommentForm\";\nexport default CommentsList;\nexport { AddCommentForm };\n","import httpService from \"./http.service\";\nconst commentEndpoint = \"comment/\";\n\nconst commentService = {\n    createComment: async (payload) => {\n        const { data } = await httpService.put(\n            commentEndpoint + payload._id,\n            payload\n        );\n        return data;\n    },\n    getComments: async (pageId) => {\n        const { data } = await httpService.get(commentEndpoint, {\n            params: {\n                orderBy: '\"pageId\"',\n                equalTo: `\"${pageId}\"`\n            }\n        });\n        return data;\n    },\n    removeComment: async (commentId) => {\n        const { data } = await httpService.delete(commentEndpoint + commentId);\n        return data;\n    }\n};\nexport default commentService;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport { useParams } from \"react-router-dom\";\nimport { useAuth } from \"./useAuth\";\nimport { nanoid } from \"nanoid\";\nimport commentService from \"../services/comment.service\";\n\nconst CommentsContext = React.createContext();\n\nexport const useComments = () => {\n    return useContext(CommentsContext);\n};\n\nexport const CommentsProvider = ({ children }) => {\n    const { userId } = useParams();\n    const { currentUser } = useAuth();\n    const [isLoading, setLoading] = useState(true);\n    const [comments, setComments] = useState([]);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        getComments();\n    }, [userId]);\n    async function createComment(data) {\n        const comment = {\n            ...data,\n            _id: nanoid(),\n            pageId: userId,\n            created_at: Date.now(),\n            userId: currentUser._id\n        };\n        try {\n            const { content } = await commentService.createComment(comment);\n            setComments((prevState) => [...prevState, content]);\n        } catch (error) {\n            errorCatcher(error);\n        }\n        console.log(comment);\n    }\n    async function getComments() {\n        try {\n            const { content } = await commentService.getComments(userId);\n            setComments(content);\n        } catch (error) {\n            errorCatcher(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n    }\n    async function removeComment(id) {\n        try {\n            const { content } = await commentService.removeComment(id);\n            if (content === null) {\n                setComments((prevState) =>\n                    prevState.filter((c) => c._id !== id)\n                );\n            }\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n    return (\n        <CommentsContext.Provider\n            value={{ comments, createComment, isLoading, removeComment }}\n        >\n            {children}\n        </CommentsContext.Provider>\n    );\n};\n\nCommentsProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n","import { orderBy } from \"lodash\";\nimport React from \"react\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\nimport { useComments } from \"../../hooks/useComments\";\n\nconst Comments = () => {\n    const { createComment, comments, removeComment } = useComments();\n\n    const handleSubmit = (data) => {\n        createComment(data);\n        // api.comments\n        //     .add({ ...data, pageId: userId })\n        //     .then((data) => setComments([...comments, data]));\n    };\n    const handleRemoveComment = (id) => {\n        removeComment(id);\n        // api.comments.remove(id).then((id) => {\n        //     setComments(comments.filter((x) => x._id !== id));\n        // });\n    };\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n    return (\n        <>\n            <div className=\"card mb-2\">\n                {\" \"}\n                <div className=\"card-body \">\n                    <AddCommentForm onSubmit={handleSubmit} />\n                </div>\n            </div>\n            {sortedComments.length > 0 && (\n                <div className=\"card mb-3\">\n                    <div className=\"card-body \">\n                        <h2>Comments</h2>\n                        <hr />\n                        <CommentsList\n                            comments={sortedComments}\n                            onRemove={handleRemoveComment}\n                        />\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Comments;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport MeetingsCard from \"../../ui/meetingsCard\";\nimport Comments from \"../../ui/comments\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { CommentsProvider } from \"../../../hooks/useComments\";\n\nconst UserPage = ({ userId }) => {\n    const { getUserById } = useUser();\n    const user = getUserById(userId);\n    if (user) {\n        return (\n            <div className=\"container\">\n                <div className=\"row gutters-sm\">\n                    <div className=\"col-md-4 mb-3\">\n                        <UserCard user={user} />\n                        <QualitiesCard data={user.qualities} />\n                        <MeetingsCard value={user.completedMeetings} />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <CommentsProvider>\n                            <Comments />\n                        </CommentsProvider>\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <h1>Loading</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pageCount = Math.ceil(itemsCount / pageSize);\n    if (pageCount === 1) return null;\n    const pages = _.range(1, pageCount + 1);\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        className={\n                            \"page-item\" +\n                            (page === currentPage ? \" active\" : \"\")\n                        }\n                        key={\"page_\" + page}\n                    >\n                        <button\n                            className=\"page-link\"\n                            onClick={() => onPageChange(page)}\n                        >\n                            {page}\n                        </button>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired,\n    currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек тусанет\";\n        }\n        if (lastOne === 1) return \"человек тусанет\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\n        return \"человек тусанет\";\n    };\n    return (\n        <h2>\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не тусанет\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button {...rest}>\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\n        </button>\n    );\n};\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead>\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <table className=\"table\">\n            {children || (\n                <>\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\n                    <TableBody {...{ columns, data }} />\n                </>\n            )}\n        </table>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport { useProfessions } from \"../../hooks/useProfession\";\nimport PropTypes from \"prop-types\";\n\nconst Profession = ({ id }) => {\n    const { isLoading, getProfession } = useProfessions();\n    const prof = getProfession(id);\n    if (!isLoading) {\n        return <p>{prof.name}</p>;\n    } else return \"Loading...\";\n};\nProfession.propTypes = {\n    id: PropTypes.string\n};\nexport default Profession;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\nimport Profession from \"./profession\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Качества\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: {\n            name: \"Профессия\",\n            component: (user) => <Profession id={user.profession} />\n        },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Оценка\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport { useUser } from \"../../../hooks/useUsers\";\nimport { useProfessions } from \"../../../hooks/useProfession\";\nimport { useAuth } from \"../../../hooks/useAuth\";\nconst UsersListPage = () => {\n    const { users } = useUser();\n    const { currentUser } = useAuth();\n    const { isLoading: professionsLoading, professions } = useProfessions();\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const handleDelete = (userId) => {\n        // setUsers(users.filter((user) => user._id !== userId));\n        console.log(userId);\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        // setUsers(newArray);\n        console.log(newArray);\n    };\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    if (users) {\n        function filterUsers(data) {\n            const filteredUsers = searchQuery\n                ? data.filter(\n                      (user) =>\n                          user.name\n                              .toLowerCase()\n                              .indexOf(searchQuery.toLowerCase()) !== -1\n                  )\n                : selectedProf\n                ? data.filter(\n                      (user) =>\n                          JSON.stringify(user.profession) ===\n                          JSON.stringify(selectedProf)\n                  )\n                : data;\n            return filteredUsers.filter((u) => u._id !== currentUser._id);\n        }\n        const filteredUsers = filterUsers(users);\n        const count = filteredUsers.length;\n        const sortedUsers = _.orderBy(\n            filteredUsers,\n            [sortBy.path],\n            [sortBy.order]\n        );\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n        const clearFilter = () => {\n            setSelectedProf();\n        };\n\n        return (\n            <div className=\"d-flex\">\n                {professions && !professionsLoading && (\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\n                        <GroupList\n                            selectedItem={selectedProf}\n                            items={professions}\n                            onItemSelect={handleProfessionSelect}\n                        />\n                        <button\n                            className=\"btn btn-secondary mt-2\"\n                            onClick={clearFilter}\n                        >\n                            {\" \"}\n                            Очистить\n                        </button>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column\">\n                    <SearchStatus length={count} />\n                    <input\n                        type=\"text\"\n                        name=\"searchQuery\"\n                        placeholder=\"Search...\"\n                        onChange={handleSearchQuery}\n                        value={searchQuery}\n                    />\n                    {count > 0 && (\n                        <UserTable\n                            users={usersCrop}\n                            onSort={handleSort}\n                            selectedSort={sortBy}\n                            onDelete={handleDelete}\n                            onToggleBookMark={handleToggleBookMark}\n                        />\n                    )}\n                    <div className=\"d-flex justify-content-center\">\n                        <Pagination\n                            itemsCount={count}\n                            pageSize={pageSize}\n                            currentPage={currentPage}\n                            onPageChange={handlePageChange}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    return \"loading...\";\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","export function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return [...items].splice(startIndex, pageSize);\n}\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport EditUserPage from \"../components/page/editUserPage\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nimport UserProvider from \"../hooks/useUsers\";\nconst Users = () => {\n    const params = useParams();\n    const { userId, edit } = params;\n    return (\n        <>\n            <UserProvider>\n                {userId ? (\n                    edit ? (\n                        <EditUserPage />\n                    ) : (\n                        <UserPage userId={userId} />\n                    )\n                ) : (\n                    <UsersListPage />\n                )}\n            </UserProvider>\n        </>\n    );\n};\n\nexport default Users;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label\" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst LoginForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const history = useHistory();\n    const { logIn } = useAuth();\n    const [errors, setErrors] = useState({});\n    const [enterError, setEnterError] = useState(null);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n        setEnterError(null);\n    };\n\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n\n        try {\n            await logIn(data);\n\n            history.push(\n                history.location.state\n                    ? history.location.state.from.pathname\n                    : \"/\"\n            );\n        } catch (error) {\n            setEnterError(error.message);\n        }\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            {enterError && <p className=\"text-danger\">{enterError}</p>}\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid || enterError}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useQualities } from \"../../hooks/useQualities\";\nimport { useProfessions } from \"../../hooks/useProfession\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { useHistory } from \"react-router-dom\";\n\nconst RegisterForm = () => {\n    const history = useHistory();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"male\",\n        name: \"\",\n        qualities: [],\n        licence: false\n    });\n    const { signUp } = useAuth();\n    const { qualities } = useQualities();\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const { professions } = useProfessions();\n    const professionsList = professions.map((p) => ({\n        label: p.name,\n        value: p._id\n    }));\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Имя обязательно для заполнения\"\n            },\n            min: {\n                message: \"Имя должно состоять минимум из 3 символов\",\n                value: 3\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const newData = {\n            ...data,\n            qualities: data.qualities.map((q) => q.value)\n        };\n\n        try {\n            await signUp(newData);\n            history.push(\"/\");\n        } catch (error) {\n            setErrors(error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выбери свою профессию\"\n                defaultOption=\"Choose...\"\n                options={professionsList}\n                name=\"profession\"\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Male\", value: \"male\" },\n                    { name: \"Female\", value: \"female\" },\n                    { name: \"Other\", value: \"other\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                defaultValue={data.qualities}\n                name=\"qualities\"\n                label=\"Выберите ваши качества\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Register</h3>\n                            <RegisterForm />\n                            <p>\n                                Already have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign In\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Login</h3>\n                            <LoginForm />\n                            <p>\n                                Dont have account?{\" \"}\n                                <a role=\"button\" onClick={toggleFormType}>\n                                    {\" \"}\n                                    Sign Up\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import { useEffect, useState } from \"react\";\nimport professions from \"../mockData/professions.json\";\nimport qualities from \"../mockData/qualities.json\";\nimport users from \"../mockData/users.json\";\nimport httpService from \"../services/http.service\";\n\nconst useMockData = () => {\n    const statusConsts = {\n        idle: \"Not Started\",\n        pending: \"In Process\",\n        successed: \"Ready\",\n        error: \"Error occurred\"\n    };\n    const [error, setError] = useState(null);\n    const [status, setStatus] = useState(statusConsts.idle);\n    const [progress, setProgress] = useState(0);\n    const [count, setCount] = useState(0);\n    const summaryCount = professions.length + qualities.length + users.length;\n    const incrementCount = () => {\n        setCount((prevState) => prevState + 1);\n    };\n    const updateProgress = () => {\n        if (count !== 0 && status === statusConsts.idle) {\n            setStatus(statusConsts.pending);\n        }\n        const newProgress = Math.floor((count / summaryCount) * 100);\n        if (progress < newProgress) {\n            setProgress(() => newProgress);\n        }\n        if (newProgress === 100) {\n            setStatus(statusConsts.successed);\n        }\n    };\n\n    useEffect(() => {\n        updateProgress();\n    }, [count]);\n    async function initialize() {\n        try {\n            for (const prof of professions) {\n                await httpService.put(\"profession/\" + prof._id, prof);\n                incrementCount();\n            }\n            for (const user of users) {\n                await httpService.put(\"user/\" + user._id, user);\n                incrementCount();\n            }\n            for (const qual of qualities) {\n                await httpService.put(\"quality/\" + qual._id, qual);\n                incrementCount();\n            }\n        } catch (error) {\n            setError(error);\n            setStatus(statusConsts.error);\n        }\n    }\n\n    return { error, initialize, progress, status };\n};\n\nexport default useMockData;\n","import React from \"react\";\nimport useMockData from \"../utils/mockData\";\n\nconst Main = () => {\n    const { error, initialize, progress, status } = useMockData();\n    const handleClick = () => {\n        initialize();\n    };\n    return (\n        <div className=\"container mt-5\">\n            <h1> Main Page</h1>\n            <h3>Инициализация данных в FireBase</h3>\n            <ul>\n                <li>Status: {status}</li>\n                <li>Progress: {progress}%</li>\n                {error && <li>Error: {error}</li>}\n            </ul>\n            <button className=\"btn btn-primary\" onClick={handleClick}>\n                {\" \"}\n                Инициализировать\n            </button>\n        </div>\n    );\n};\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\nfunction NavProfile() {\n    const { currentUser } = useAuth();\n    const [isOpen, setOpen] = useState(false);\n    const toggleMenu = () => {\n        setOpen((prevState) => !prevState);\n    };\n    return (\n        <div className=\"dropdown\" onClick={toggleMenu}>\n            <div className=\"btn dropdown-toggle d-flex align-items-center\">\n                <div className=\"me-2\">{currentUser.name}</div>\n                <img\n                    src={currentUser.image}\n                    alt=\"\"\n                    height=\"40\"\n                    className=\"img-responsive rounded-circle\"\n                />\n            </div>\n            <div className={\"w-100 dropdown-menu\" + (isOpen ? \" show\" : \"\")}>\n                <Link\n                    to={`/users/${currentUser._id}`}\n                    className=\"dropdown-item\"\n                >\n                    Profile\n                </Link>\n                <Link to=\"/logout\" className=\"dropdown-item\">\n                    Log Out\n                </Link>\n            </div>\n        </div>\n    );\n}\n\nexport default NavProfile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport NavProfile from \"./navProfile\";\nconst NavBar = () => {\n    const { currentUser } = useAuth();\n    return (\n        <nav className=\"navbar bg-light mb-3\">\n            <div className=\"container-fluid\">\n                <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\n                            Main\n                        </Link>\n                    </li>\n                    {currentUser && (\n                        <li className=\"nav-item\">\n                            <Link\n                                className=\"nav-link \"\n                                aria-current=\"page\"\n                                to=\"/users\"\n                            >\n                                Users\n                            </Link>\n                        </li>\n                    )}\n                </ul>\n                <div className=\"d-flex\">\n                    {currentUser ? (\n                        <NavProfile />\n                    ) : (\n                        <Link\n                            className=\"nav-link \"\n                            aria-current=\"page\"\n                            to=\"/login\"\n                        >\n                            Login\n                        </Link>\n                    )}\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useAuth } from \"../../hooks/useAuth\";\nfunction ProtectedRoute({ component: Component, children, ...rest }) {\n    const { currentUser } = useAuth();\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                if (!currentUser) {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: \"/login\",\n                                state: {\n                                    from: props.location\n                                }\n                            }}\n                        />\n                    );\n                }\n                return Component ? <Component {...props} /> : children;\n            }}\n        />\n    );\n}\nProtectedRoute.propTypes = {\n    component: PropTypes.func,\n    location: PropTypes.object,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default ProtectedRoute;\n","import React, { useEffect } from \"react\";\nimport { useAuth } from \"../hooks/useAuth\";\nconst LogOut = () => {\n    const { logOut } = useAuth();\n    useEffect(() => {\n        logOut();\n    }, []);\n    return <h1>Loading</h1>;\n};\n\nexport default LogOut;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Users from \"./layouts/users\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport NavBar from \"./components/ui/navBar\";\nimport { ProfessionProvider } from \"./hooks/useProfession\";\nimport { QualitiesProvider } from \"./hooks/useQualities\";\nimport AuthProvider from \"./hooks/useAuth\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport LogOut from \"./layouts/logOut\";\n\nfunction App() {\n    return (\n        <div>\n            <AuthProvider>\n                <NavBar />\n\n                <QualitiesProvider>\n                    <ProfessionProvider>\n                        <Switch>\n                            <ProtectedRoute\n                                path=\"/users/:userId?/:edit?\"\n                                component={Users}\n                            />\n                            <Route path=\"/login/:type?\" component={Login} />\n                            <Route path=\"/logout\" component={LogOut} />\n                            <Route path=\"/\" exact component={Main} />\n                            <Redirect to=\"/\" />\n                        </Switch>\n                    </ProfessionProvider>\n                </QualitiesProvider>\n            </AuthProvider>\n\n            <ToastContainer />\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}